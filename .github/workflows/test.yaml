name: Test

on:
  workflow_dispatch:
  push:
jobs:
  test:
    name: Test
    # environment:
      # For security reasons, all pull requests need to be approved first before granting access to secrets
      # So the environment should be set to have a reviewer/s inspect it before approving it
      # name: ${{ inputs.environment || 'Test Pull Request' }}
    runs-on: ubuntu-20.04
    env:
      COMPOSE_PROJECT_NAME: ci_${{github.run_id}}_${{github.run_attempt || '1'}}
      DEVICE_ID: ci_${{github.run_id}}_${{github.run_attempt || '1'}}
    steps:
      # Checkout either the PR or the branch
      - name: Checkout PR
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }} # Check out the code of the PR. Only after the manual approval process

      - name: Checkout
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v3

      - name: Checkout
        uses: actions/checkout@v3
        if: ${{ github.event_name != 'pull_request' }}

      - name: create .env file
        run: |
          touch .env
          echo "DEVICE_ID=$DEVICE_ID" >> .env
          echo 'C8Y_BASEURL="${{ secrets.C8Y_BASEURL }}"' >> .env
          echo 'C8Y_USER="${{ secrets.C8Y_USER }}"' >> .env
          echo 'C8Y_PASSWORD="${{ secrets.C8Y_PASSWORD }}"' >> .env
          cat .env

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: |
            tests/requirements.txt

      - uses: extractions/setup-just@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          just venv

      - name: Start demo
        run: |
          # just up-no-cache
          just up
          just bootstrap --no-prompt

          sleep 10
          just shell systemctl restart tedge-mapper-c8y
          sleep 10

      - name: Run tests
        run: just test

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: reports
          path: output

      - name: Stop Demo
        if: always()
        run: just down-all

  generate_report:
    name: Publish report
    if: ${{ always() && github.event_name == 'pull_request' }}
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download reports
      uses: actions/download-artifact@v3
      with:
        name: reports
        path: reports
    - name: Send report to commit
      uses: joonvena/robotframework-reporter-action@v2.1
      with:
        gh_access_token: ${{ secrets.GITHUB_TOKEN }}
